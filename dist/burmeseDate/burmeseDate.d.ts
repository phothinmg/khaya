export class DateTime {
    static j2w(jd: any, ct?: number, SG?: number): {
        y: number;
        m: number;
        d: number;
        h: number;
        n: number;
        s: number;
    };
    static t2d(h: any, n: any, s: any): number;
    static w2j(y: any, m: any, d: any, h?: number, n?: number, s?: number, ct?: number, SG?: number): any;
    static u2j(ut: any): number;
    static j2u(jd: any): number;
    static jdnow(): number;
    static ltzoh(): number;
    static j2s(jd: any, fs?: string, tz?: number, ct?: number, SG?: number): string;
    static s2j(tstr: any, tz?: number, ct?: number, SG?: number): number;
    static GetDigits(str: any): string;
    static wml(y: any, m: any, ct?: number, SG?: number): number;
    constructor(m_jd: any, m_tz: any, m_ct?: number, m_SG?: number);
    m_tz: any;
    m_jd: any;
    m_ct: number;
    m_SG: number;
    SetTimezone(tz: any): void;
    Set2Now(): void;
    SetJD(jd: any): void;
    SetUnixTime(ut: any): void;
    SetDateTime(year: any, month: any, day: any, hour?: number, minute?: number, second?: number, tz?: number, ct?: number, SG?: number): void;
    SetDateTimeString(tstr: any, tz?: number, ct?: number, SG?: number): void;
    SetCT(ct: any): void;
    SetSG(sg: any): void;
    ToString(fs?: string): string;
    get jd(): any;
    get jdl(): any;
    get jdn(): number;
    get jdnl(): number;
    get y(): number;
    get m(): number;
    get d(): number;
    get h(): number;
    get n(): number;
    get s(): number;
    get l(): number;
    get w(): number;
    get ut(): number;
    get tz(): any;
    get ct(): number;
    get SG(): number;
    get mlen(): number;
}
export class burmeseDate extends DateTime {
    static GetMyConst(my: any): {
        EI: number;
        WO: number;
        NM: number;
        EW: number;
    };
    static bSearch2(k: any, A: any): number;
    static bSearch1(k: any, A: any): number;
    static cal_watat(my: any): {
        fm: number;
        watat: number;
    };
    static cal_my(my: any): {
        myt: any;
        tg1: number;
        fm: number;
        werr: number;
    };
    static j2m(jdn: any): {
        myt: any;
        my: number;
        mm: number;
        md: number;
    };
    static cal_mp(md: any, mm: any, myt: any): number;
    static cal_mml(mm: any, myt: any): number;
    static cal_myl(myt: any): number;
    static cal_mf(md: any): number;
    static cal_md(mf: any, mp: any, mm: any, myt: any): number;
    static m2j(my: any, mm: any, md: any): number;
    static cal_sabbath(md: any, mm: any, myt: any): number;
    static cal_yatyaza(mm: any, wd: any): number;
    static cal_pyathada(mm: any, wd: any): number;
    static cal_nagahle(mm: any): number;
    static cal_mahabote(my: any, wd: any): number;
    static cal_nakhat(my: any): number;
    static cal_thamanyo(mm: any, wd: any): number;
    static cal_amyeittasote(md: any, wd: any): number;
    static cal_warameittugyi(md: any, wd: any): number;
    static cal_warameittunge(md: any, wd: any): number;
    static cal_yatpote(md: any, wd: any): number;
    static cal_thamaphyu(md: any, wd: any): number;
    static cal_nagapor(md: any, wd: any): number;
    static cal_yatyotema(mm: any, md: any): number;
    static cal_mahayatkyan(mm: any, md: any): number;
    static cal_shanyat(mm: any, md: any): number;
    static cal_astro(jdn: any): string[];
    static cal_holiday(jdn: any): string[];
    static DoE(y: any): number;
    static cal_holiday2(jdn: any): string[];
    static j2ms(jd: any, fs?: string, tz?: number): string;
    SetMDateTime(my: any, mm: any, md: any, hour?: number, minute?: number, second?: number, tz?: number): void;
    get myt(): any;
    get my(): any;
    get sy(): any;
    get my_name(): string;
    get mm(): any;
    get md(): any;
    get mp(): any;
    get mf(): any;
    get mmlen(): any;
    get sabbath(): string;
    get yatyaza(): "" | "Yatyaza";
    get pyathada(): string;
    get nagahle(): string;
    get mahabote(): string;
    get nakhat(): string;
    get astro(): any;
    get holidays(): any;
    get holidays2(): any;
    ToMString(fs?: string): any;
}
//# sourceMappingURL=burmeseDate.d.ts.map